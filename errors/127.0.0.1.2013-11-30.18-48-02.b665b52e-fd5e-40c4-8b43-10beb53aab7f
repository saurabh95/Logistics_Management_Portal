(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'adda'"
p3
sS'layer'
p4
S'/home/saurabh/web2py/applications/Comprehensive_Logistics_Management_Portal/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simple replace the two lines below with:\n    return auth.wiki()\n    """\n    return dict(message=T(\'Hello World\'))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in \n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n@auth.requires_login()\ndef place_order():\n    if request.post_vars[\'source_city\']:\n        """print request.post_vars;\n        print request.post_vars[\'service\']\n        print request.post_vars[\'source_city\']\n        print request.post_vars[\'Destination_city\']\n        """\n        a=db((db.Location1.Source_City==request.post_vars[\'source_city\'])&( db.Location1.Destination_City==request.post_vars[\'destination_city\']) ).select()\n        #print a[0].id\n        print request.post_vars[\'type\']\n        db.Logistics.insert(Service=request.post_vars[\'service\'],\n            location_id=a[0].id,\n            Logistic_Type=request.post_vars[\'type\'],\n            Mode_of_Payment=request.post_vars[\'mode_of_payment\'],\n            Weight=request.post_vars[\'weight\'],\n            customer_id=auth.user.id,\n            Source_address=request.post_vars[\'source_address\'],\n            Destination_address=request.post_vars[\'destination_address\'])\n        session.flash=\'Order Placed\'\n        mail_body=\'Hi ,%s\\nYou have successfully placed order for your consignment\\nDetails are :\\nThank You\'%(auth.user.first_name,)\n        mail.send(\'sksaurabhkathpalia@gmail.com\', \'Booking Confirmation Mail\', mail_body)\n        redirect(URL(\'index\'))\n    return locals()\n\ndef track_consignment():\n    consignment_id=request.vars.consignment_id\n    x=db(db.Logistics.id==consignment_id).select(db.Logistics.ALL)\n    lid=x[0][\'location_id\']\n    loc=db(db.Location1.id==lid).select(db.Location1.ALL)\n    return dict(x=x,loc=loc)\n\ndef estimate_cost():\n    return locals()\n\ndef estimate():\n    source_city=request.vars.source_city;\n    destination_city=request.vars.destination_city;\n    print source_city\n    print destination_city\n    logistic_type=request.vars.logistic_type\n    weight=request.vars.weight\n    if(logistic_type==\'Document\'):\n        weight=0\n    s="<h3>Enter Weight</h3>"\n    if(weight==""):\n        return s\n    mode_of_payment=request.vars.mode_of_payment\n    service=request.vars.service\n    print service\n    print logistic_type,mode_of_payment\n    c1="<h3>Estimated Cost of consignment &nbsp;&nbsp; "\n    cost=db((db.Location1.Source_City==source_city )&(db.Location1.Destination_City==destination_city)).select(db.Location1.standard_cost)\n    cost=(cost[0][\'standard_cost\'])\n    if(weight!=None):\n        weight=int(weight)\n    if(logistic_type==\'Non-Document\'):\n        cost+=weight*25\n    if(mode_of_payment!=\'Self Service(You go to dealer to pay)\'):\n        cost+=30\n    if(service==\'Airport to Airport\'):\n        cost+=50\n    elif (service==\'Domestic Priority\'):\n        cost+=30\n    elif(service==\'Domestic Priority 1030\'):\n        cost+=35\n    elif(service==\'Door to Door\'):\n        cost+=30\n    cost="<br/><center>Rs. "+str(cost) +"</center>"\n    c1+=cost\n    cost=c1\n    #print c2\n  #  ret="<script>" + "function cost() { alert(\'"\n    ret=""\n    ret+=cost\n   # ret+="\');"\n   # ret+="}"\n  #  ret+="cost();"\n  #  ret+="</script>"\n    ret+="</h3>"\n    print ret\n    return ret\n\ndef enter_id():\n    return locals();\n\ndef check_dest():\n    source_city=request.vars.source_city;\n #   print source_city\n   # soure_city=source_city[0]\n    a=[]\n    ret=db(db.Location1.Source_City==source_city).select(db.Location1.Destination_City)\n    for i in ret:\n        a.append(i[\'Destination_City\'])\n    a=set(a)\n    result=""\n    result+="<link rel=\\"stylesheet\\" href=\\"/Comprehensive_Logistics_Management_Portal/static/chosen/chosen.css\\"><style type=\\"text/css\\" media=\\"all\\">.chosen-rtl .chosen-drop { left: -9000px; }</style>"\n    result+="<select class=\\"chosen-select\\" name=\\"destination_city\\">"\n    for i in a:\n        result += "<option value=\\"" + str(i) + "\\"" + ">" + i + "</option>"\n    result+="</select>"\n    #result+="<script src=\\"https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js\\" type=\\"text/javascript\\"></script>\n    result+="<script src=\\"/Comprehensive_Logistics_Management_Portal/static/chosen/chosen.jquery.js\\" type=\\"text/javascript\\"></script>"\n    result+="  <script type=\\"text/javascript\\">var config = {\'.chosen-select\': {},\'.chosen-select-deselect\'  : {allow_single_deselect:true},\'.chosen-select-no-single\' : {disable_search_threshold:10}, \'.chosen-select-no-results\': {no_results_text:\'Oops, nothing found!\'},\'.chosen-select-width\': {width:\\"95%\\"}}\\n  for (var selector in config) {$(selector).chosen(config[selector]);}</script>"  \n    #print result\n    return result\n\n\n\ndef adminupdate():\n    v=request.post_vars[\'submit\']\n    print v;\n    if v:\n        #print request.post_vars;\n        #print request.post_vars[\'current\'],request.post_vars[\'expected\'];\n        cur=request.post_vars[\'current\']\n        order=request.post_vars[\'orderid\']\n        d=request.post_vars[\'expected\']        \n        print d,cur,order;\n        db(db.Logistics.id==order).update(Expected_Delivery_Date=d,Current_location=cur)  \n        response.flash="updated"\n    return locals()\n\n\n\ndef showorderid():\n    #pint \'aabhas\'\n    var=request.vars.orderid;\n    a=db(db.Logistics.id==var).select()\n    #print a\n    s=""\n    if len(a)==0:\n        s="Enter a valid id"\n    else:\n        a=a[0]\n        s+="id : "+str(a.id)+ "<br/>"\n        s+="Source_address :" + str(a.Source_address) +"<br/>"\n        s+="Destination_address :" + str(a.Destination_address) +"<br/>"\n        s+="Logistic_Type :" +str(a.Logistic_Type) +"<br/>"\n        if a.Logistic_Type!=\'Document\':\n            print \'aabhas_majumdar\'\n            s+="Weight :" +str(a.Weight) +"<br/>"\n        s+="Mode_of_Payment :" +str(a.Mode_of_Payment) +"<br/>"\n        s+="Service :" +str(a.Service) +"<br/>"\n        loc=db(db.Location1.id==a.location_id).select()\n        loc=loc[0];\n        s+="Destination city :" + str(loc.Destination_City) +"<br/>"\n        s+="Source City :" + str(loc.Source_City) +"<br/>"\n        cus=db(a.customer_id==db.auth_user.id).select()\n        s+="Username :" + str(cus[0].username) +"<br/>" \n        s+="Current Location :" +str(a.Current_location) +"<br/>"\n        s+="Expected Delivery Date :" +str(a.Expected_Delivery_Date) +"<br/>"\n        #s+="<form method =\\"POST\\" action=\\"\\" >"\n        #s+="<form action=\\"#\\" enctype=\\"multipart/form-data\\" method=\\"post\\">"\n        if a.Current_location==None:\n            a.Current_location=\'\'\n        s+="Current Location &nbsp;&nbsp; : &nbsp;&nbsp;<input value=\\"%s\\" name=\\"current\\" type=\\"text\\" />"%a.Current_location\n        if a.Expected_Delivery_Date==None:\n            a.Expected_Delivery_Date=\'\'\n        #s+="<br/> Expected Delivery Date&nbsp;&nbsp; : &nbsp;&nbsp;<input class=\\"date\\" placeholder=\\"yyyy-mm-dd\\" type=\\\'text\\\' value=\\"%s\\" name=\\"expected\\" />"%a.Expected_Delivery_Date\n        #s+="<tr id=\\>"Logistics_Expected_Delivery_Date__row\\"><td class=\\"w2p_fl\\"><label for=\\"Logistics_Expected_Delivery_Date\\" id=\\"Logistics_Expected_Delivery_Date__label\\">Expected Delivery Date: </label></td><td class=\\"w2p_fw\\"><input class=\\"date\\" id=\\"Logistics_Expected_Delivery_Date\\" name=\\"Expected_Delivery_Date\\" value=\\"\\" type=\\"text\\"></td><td class=\\"w2p_fc\\"></td></tr>"\n        s+="<script src=\\"/Comprehensive_Logistics_Management_Portal/static/js/jquery.js\\" type=\\"text/javascript\\"></script><link href=\\"/Comprehensive_Logistics_Management_Portal/static/css/calendar.css\\" rel=\\"stylesheet\\" type=\\"text/css\\" /><script src=\\"/Comprehensive_Logistics_Management_Portal/static/js/calendar.js\\" type=\\"text/javascript\\"></script><script src=\\"/Comprehensive_Logistics_Management_Portal/static/js/web2py.js\\" type=\\"text/javascript\\"></script><link href=\\"/Comprehensive_Logistics_Management_Portal/static/css/web2py.css\\" rel=\\"stylesheet\\" type=\\"text/css\\" /><link href=\\"/Comprehensive_Logistics_Management_Portal/static/css/bootstrap.min.css\\" rel=\\"stylesheet\\" type=\\"text/css\\" /><link href=\\"/Comprehensive_Logistics_Management_Portal/static/css/bootstrap-responsive.min.css\\" rel=\\"stylesheet\\" type=\\"text/css\\" /><link href=\\"/Comprehensive_Logistics_Management_Portal/static/css/web2py_bootstrap.css\\" rel=\\"stylesheet\\" type=\\"text/css\\" />"\n        s+="<table><tr><td class=\\"w2p_fc\\"></td></tr><tr id=\\"Logistics_Expected_Delivery_Date__row\\"><td class=\\"w2p_fl\\"><label for=\\"Logistics_Expected_Delivery_Date\\" id=\\"Logistics_Expected_Delivery_Date__label\\">Expected Delivery Date: </label></td><td class=\\"w2p_fw\\"><input class=\\"date\\" id=\\"expected\\" name=\\"expected\\" type=\\"text\\" value=\\"%s\\" /></td></table>"%a.Expected_Delivery_Date\n        \n        #s+="<table>"\n        s+="<br/><input type=\\"submit\\" name=\\\'submit\\\' value=\\"update\\" class=\\"btn btn-primary / \\">"\n        #s+="</div>"\n        #s+="</table>"\n        #s+="</form>"\n        #s+= "" + str(a.id) +"<br/>"\n    form=SQLFORM(db.Logistics)\n    return  XML(s)\n    #return dict(form=form)\n\n\ndef showorderid_1():\n    #pint \'aabhas\'\n    var=request.vars.orderid;\n    a=db(db.Logistics.id==var).select()\n    #print a\n    s=""\n    if len(a)==0:\n        s="Enter a valid id"\n    else:\n        a=a[0]\n        loc=db(db.Location1.id==a.location_id).select()\n        loc=loc[0];\n        cus=db(a.customer_id==db.auth_user.id).select()\n        s+="Username :" + str(cus[0].username) +"<br/>" \n        s+="Source City :" + str(loc.Source_City) +"<br/>"\n        s+="Destination city :" + str(loc.Destination_City) +"<br/>"\n        \n        s+="Current Location :" +str(a.Current_location) +"<br/>"\n        s+="Expected Delivery Date :" +str(a.Expected_Delivery_Date) +"<br/>"\n        #s+="<form method =\\"POST\\" action=\\"\\" >"\n        #s+="<form action=\\"#\\" enctype=\\"multipart/form-data\\" method=\\"post\\">"\n    \n    return  XML(s)\n    #return dict(form=form)\n\n\n\n@auth.requires_login()\ndef view_consignment():\n    a=db(db.Logistics.customer_id==auth.user.id).select()\n    b=\'aabhas\'\n    return dict(a=a)\n\n\ndef test():\n    form=SQLFORM(db.Logistics)\n    a=1\n    print dir(form.hidden_fields);\n    if form.process().accepted and a==  0:\n        print dir(form)\n        print \n        print dir(form.vars)\n        print \'\\n\',form.vars;\n    return locals()\n\n\n\n@auth.requires_login()\ndef testmail():\n    print auth.user.email;\n    mail = auth.settings.mailer\n    mail.settings.server = \'aabhas_majumdar@yahoo.com:25\'\n    mail.settings.sender = \'admin@logistic.com\'\n    mail.settings.login = \'admin:password\'\n    a=mail.send(to=[\'noreply@example.com\'],\n          subject=\'hello\',\n          # If reply_to is omitted, then mail.settings.sender is used\n          reply_to=\'us@example.com\',\n          message=\'hi there\')\n    print a;\n    return locals()\n\n\ndef cancel_consignment():\n    x=request.vars.cancel_id\n    print x\n    db(db.Logistics.id==x).delete()\n    redirect(URL(\'default\',\'view_consignment\'))\n\n\n\ndef adminadd():\n    form=SQLFORM(db.Location1)\n    if form.process().accepted:\n        session.flash="new location added"\n        redirect(URL(\'index\'))\n    return locals()\n\ndef contact():\n    return locals()\n\n\ndef about_us():\n    return locals()\n\n\ndef track_by_id():\n    order_id=request.vars.order_id\n    x=db(db.Logistics.id==order_id).select(db.Logistics.ALL)\n    print x\n    return dict(x=x)\n\nresponse._vars=response._caller(track_by_id)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/saurabh/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/saurabh/web2py/applications/Comprehensive_Logistics_Management_Portal/controllers/default.py", line 343, in <module>\n  File "/home/saurabh/web2py/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/saurabh/web2py/applications/Comprehensive_Logistics_Management_Portal/controllers/default.py", line 339, in track_by_id\n    x=db(db.Logistics.id==order_id).select(db.Logistics.ALL)\n  File "/home/saurabh/web2py/gluon/dal.py", line 10111, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/home/saurabh/web2py/gluon/dal.py", line 2304, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/home/saurabh/web2py/gluon/dal.py", line 1738, in select\n    sql = self._select(query, fields, attributes)\n  File "/home/saurabh/web2py/gluon/dal.py", line 1649, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/home/saurabh/web2py/gluon/dal.py", line 1422, in expand\n    out = op(first, second, **optional_args)\n  File "/home/saurabh/web2py/gluon/dal.py", line 1325, in EQ\n    self.expand(second, first.type))\n  File "/home/saurabh/web2py/gluon/dal.py", line 1433, in expand\n    return str(self.represent(expression,field_type))\n  File "/home/saurabh/web2py/gluon/dal.py", line 1874, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'adda\'\n'
p11
s.